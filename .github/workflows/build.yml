name: build

on:
  push: {}
  pull_request: {}
  workflow_dispatch: {}

jobs:
  build:
    name: DistroKit Build
    #runs-on: ${{ vars.BUILD_RUNS_ON || (github.repository == 'rauc/meta-rauc' && 'ptx-runner') || 'ubuntu-latest' }}
    runs-on: [self-hosted, forrest, build]
    timeout-minutes: 720
    steps:
      - name: Setup Overlay Mount for PTXdist Cache
        run: |
          ls -l /srv/cache
          sudo mkdir /srv/cache-overlay /srv/cache-work
          sudo mount -t overlay overlay -o lowerdir=/srv/cache,upperdir=/srv/cache-overlay,workdir=/srv/cache-work /srv/cache
          sudo chmod ugo+rwx /srv/cache/src
          ls -l /srv/cache
          mkdir ~/.ptxdist
          echo 'PTXCONF_SETUP_SRCDIR="/srv/cache/src"' >> ~/.ptxdist/ptxdistrc-git
          echo 'PTXCONF_SETUP_PTXMIRROR="https://www.pengutronix.de/software/ptxdist/temporary-src"' >> ~/.ptxdist/ptxdistrc-git
          cp ~/.ptxdist/ptxdistrc-git ~/.ptxdist/ptxdistrc-2010.01
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup
        run: |
          ptxdist platform configs/platform-v7a/platformconfig
          ptxdist bsp-info
      - name: Setup
        run: |
          sudo apt-get -y --no-install-recommends install python3-venv
      - name: Build Packages
        run: |
          ptxdist go -j
      #- name: Build Images
      #  run: |
      #    ptxdist images -q -j
      - name: Cache Data
        if: ${{ always() }}
        run: |
          echo "${{ secrets.PTXDIST_CACHE_KEY }}" >> ~/.ssh/id_ed25519
          chmod 600 ~/.ssh/id_ed25519
          ls -l /srv/cache-overlay
          test ! -s ~/.ssh/id_ed25519 || rsync -rvx --ignore-existing /srv/cache/src ptxdist-cache: || true
